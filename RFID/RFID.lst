;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 19/08/2019 20:27:35
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28C9      	GOTO       201
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00A4      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00A3      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
;RFID.c,40 :: 		void interrupt (void){
;RFID.c,41 :: 		if (PIR1.SSPIF){
0x000B	0x1D8C      	BTFSS      PIR1, 3
0x000C	0x280F      	GOTO       L_interrupt2
;RFID.c,42 :: 		PIR1.SSPIF = 0;                                                         // Limpa a flag de interrupção da SSP
0x000D	0x118C      	BCF        PIR1, 3
;RFID.c,43 :: 		SS         = 1;                                                         // Slave não selecionado
0x000E	0x1408      	BSF        PORTD, 0
;RFID.c,44 :: 		}
L_interrupt2:
;RFID.c,45 :: 		}
L_end_interrupt:
L__interrupt14:
0x000F	0x0823      	MOVF       ___savePCLATH, 0
0x0010	0x008A      	MOVWF      PCLATH
0x0011	0x0E24      	SWAPF      ___saveSTATUS, 0
0x0012	0x0083      	MOVWF      STATUS
0x0013	0x0EFF      	SWAPF      R15, 1
0x0014	0x0E7F      	SWAPF      R15, 0
0x0015	0x0009      	RETFIE
; end of _interrupt
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0016	0x1283      	BCF        STATUS, 5
0x0017	0x1303      	BCF        STATUS, 6
0x0018	0x0822      	MOVF       ___DoICPAddr+1, 0
0x0019	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x001A	0x0821      	MOVF       ___DoICPAddr, 0
0x001B	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x001C	0x0008      	RETURN
; end of _____DoICP
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x001D	0x0000      	NOP
0x001E	0x0000      	NOP
0x001F	0x0000      	NOP
0x0020	0x0000      	NOP
0x0021	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0022	0x0008      	RETURN
; end of _Delay_1us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0023	0x3024      	MOVLW      36
0x0024	0x1283      	BCF        STATUS, 5
0x0025	0x1303      	BCF        STATUS, 6
0x0026	0x00FC      	MOVWF      R12
0x0027	0x30B5      	MOVLW      181
0x0028	0x00FD      	MOVWF      R13
L_Delay_5500us5:
0x0029	0x0BFD      	DECFSZ     R13, 1
0x002A	0x2829      	GOTO       L_Delay_5500us5
0x002B	0x0BFC      	DECFSZ     R12, 1
0x002C	0x2829      	GOTO       L_Delay_5500us5
0x002D	0x0000      	NOP
0x002E	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x002F	0x0008      	RETURN
; end of _Delay_5500us
_UART1_Init:
;__Lib_UART_c67.c,2 :: 		
;__Lib_UART_c67.c,5 :: 		
0x0030	0x1683      	BSF        STATUS, 5
0x0031	0x1303      	BCF        STATUS, 6
0x0032	0x1698      	BSF        TXSTA, 5
;__Lib_UART_c67.c,6 :: 		
0x0033	0x3090      	MOVLW      144
0x0034	0x1283      	BCF        STATUS, 5
0x0035	0x0098      	MOVWF      RCSTA
;__Lib_UART_c67.c,7 :: 		
0x0036	0x1683      	BSF        STATUS, 5
0x0037	0x1787      	BSF        TRISC7_bit, BitPos(TRISC7_bit+0)
;__Lib_UART_c67.c,8 :: 		
0x0038	0x1307      	BCF        TRISC6_bit, BitPos(TRISC6_bit+0)
;__Lib_UART_c67.c,10 :: 		
L_UART1_Init0:
0x0039	0x1283      	BCF        STATUS, 5
0x003A	0x1E8C      	BTFSS      PIR1, 5
0x003B	0x283F      	GOTO       L_UART1_Init1
;__Lib_UART_c67.c,11 :: 		
0x003C	0x081A      	MOVF       RCREG, 0
0x003D	0x00F0      	MOVWF      R0
0x003E	0x2839      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,12 :: 		
L_end_UART1_Init:
0x003F	0x0008      	RETURN
; end of _UART1_Init
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x0040	0x1683      	BSF        STATUS, 5
0x0041	0x1303      	BCF        STATUS, 6
0x0042	0x1286      	BCF        LCD_EN_Direction, BitPos(LCD_EN_Direction+0)
;__Lib_Lcd.c,87 :: 		
0x0043	0x1206      	BCF        LCD_RS_Direction, BitPos(LCD_RS_Direction+0)
;__Lib_Lcd.c,88 :: 		
0x0044	0x1006      	BCF        LCD_D4_Direction, BitPos(LCD_D4_Direction+0)
;__Lib_Lcd.c,89 :: 		
0x0045	0x1086      	BCF        LCD_D5_Direction, BitPos(LCD_D5_Direction+0)
;__Lib_Lcd.c,90 :: 		
0x0046	0x1106      	BCF        LCD_D6_Direction, BitPos(LCD_D6_Direction+0)
;__Lib_Lcd.c,91 :: 		
0x0047	0x1186      	BCF        LCD_D7_Direction, BitPos(LCD_D7_Direction+0)
;__Lib_Lcd.c,93 :: 		
0x0048	0x1283      	BCF        STATUS, 5
0x0049	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,94 :: 		
0x004A	0x1206      	BCF        LCD_RS, BitPos(LCD_RS+0)
;__Lib_Lcd.c,95 :: 		
0x004B	0x1186      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,96 :: 		
0x004C	0x1106      	BCF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,97 :: 		
0x004D	0x1086      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,98 :: 		
0x004E	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,100 :: 		
0x004F	0x2023      	CALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x0050	0x2023      	CALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x0051	0x2023      	CALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x0052	0x1486      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,106 :: 		
0x0053	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,107 :: 		
0x0054	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,108 :: 		
0x0055	0x201D      	CALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x0056	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,110 :: 		
0x0057	0x2023      	CALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x0058	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,113 :: 		
0x0059	0x201D      	CALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x005A	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,115 :: 		
0x005B	0x2023      	CALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x005C	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,118 :: 		
0x005D	0x201D      	CALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x005E	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,120 :: 		
0x005F	0x2023      	CALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x0060	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,124 :: 		
0x0061	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,125 :: 		
0x0062	0x201D      	CALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x0063	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,127 :: 		
0x0064	0x2023      	CALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x0065	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,131 :: 		
0x0066	0x201D      	CALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x0067	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,134 :: 		
0x0068	0x1086      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,135 :: 		
0x0069	0x1586      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,136 :: 		
0x006A	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,137 :: 		
0x006B	0x201D      	CALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x006C	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,139 :: 		
0x006D	0x2023      	CALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x006E	0x1186      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,143 :: 		
0x006F	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,144 :: 		
0x0070	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,145 :: 		
0x0071	0x201D      	CALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x0072	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,148 :: 		
0x0073	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,149 :: 		
0x0074	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,150 :: 		
0x0075	0x201D      	CALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x0076	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,152 :: 		
0x0077	0x2023      	CALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x0078	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,156 :: 		
0x0079	0x201D      	CALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x007A	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,159 :: 		
0x007B	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,160 :: 		
0x007C	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,161 :: 		
0x007D	0x201D      	CALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x007E	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,163 :: 		
0x007F	0x2023      	CALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x0080	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,167 :: 		
0x0081	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,168 :: 		
0x0082	0x201D      	CALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x0083	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,171 :: 		
0x0084	0x1586      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,172 :: 		
0x0085	0x1506      	BSF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,173 :: 		
0x0086	0x1486      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,174 :: 		
0x0087	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,175 :: 		
0x0088	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,176 :: 		
0x0089	0x201D      	CALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x008A	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,179 :: 		
0x008B	0x2023      	CALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x008C	0x1420      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x008D	0x0008      	RETURN
; end of _Lcd_Init
_mssp_SPI_init:
;RFID.c,20 :: 		void mssp_SPI_init(){                                                           // Função que inicializa a mssp pra trabalhar com comunicação SPI
;RFID.c,27 :: 		TRISC.RC5   = 0;                                                            // SDO é OUTPUT
0x008E	0x1683      	BSF        STATUS, 5
0x008F	0x1303      	BCF        STATUS, 6
0x0090	0x1287      	BCF        TRISC, 5
;RFID.c,28 :: 		TRISC.RC3   = 0;                                                            // SCK é OUTPUT
0x0091	0x1187      	BCF        TRISC, 3
;RFID.c,29 :: 		SSPSTAT.SMP = 0;                                                            // Dados de entrada são amostrados no meio do tempo dos dados de saída
0x0092	0x1394      	BCF        SSPSTAT, 7
;RFID.c,30 :: 		SSPSTAT.CKE = 0;                                                            // A transmissão ocorre na transição do estado do clock ocioso para ativo
0x0093	0x1314      	BCF        SSPSTAT, 6
;RFID.c,31 :: 		SSPCON      = 0x32;                                                         // Habilita os pinos da SSP, clock ocioso em HIGH level, Master Mode Fosc/64
0x0094	0x3032      	MOVLW      50
0x0095	0x1283      	BCF        STATUS, 5
0x0096	0x0094      	MOVWF      SSPCON
;RFID.c,32 :: 		}
L_end_mssp_SPI_init:
0x0097	0x0008      	RETURN
; end of _mssp_SPI_init
_UART1_Data_Ready:
;__Lib_UART_c67.c,16 :: 		
;__Lib_UART_c67.c,17 :: 		
0x0098	0x3000      	MOVLW      0
0x0099	0x1283      	BCF        STATUS, 5
0x009A	0x1303      	BCF        STATUS, 6
0x009B	0x1A8C      	BTFSC      PIR1, 5
0x009C	0x3001      	MOVLW      1
0x009D	0x00F0      	MOVWF      R0
;__Lib_UART_c67.c,18 :: 		
L_end_UART1_Data_Ready:
0x009E	0x0008      	RETURN
; end of _UART1_Data_Ready
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x009F	0x2016      	CALL       _____DoICP
0x00A0	0x118A      	BCF        PCLATH, 3
0x00A1	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x00A2	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x00A3	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x00A4	0x0AA1      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x00A5	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x00A6	0x0AA2      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x00A7	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x00A8	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x00A9	0x289F      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x00AA	0x0008      	RETURN
; end of ___CC2DW
_UART1_Read:
;__Lib_UART_c67.c,21 :: 		
;__Lib_UART_c67.c,24 :: 		
0x00AB	0x1283      	BCF        STATUS, 5
0x00AC	0x1303      	BCF        STATUS, 6
0x00AD	0x081A      	MOVF       RCREG, 0
0x00AE	0x00F1      	MOVWF      R1
;__Lib_UART_c67.c,25 :: 		
0x00AF	0x1C98      	BTFSS      RCSTA, 1
0x00B0	0x28B3      	GOTO       L_UART1_Read2
;__Lib_UART_c67.c,26 :: 		
0x00B1	0x1218      	BCF        RCSTA, 4
;__Lib_UART_c67.c,27 :: 		
0x00B2	0x1618      	BSF        RCSTA, 4
;__Lib_UART_c67.c,28 :: 		
L_UART1_Read2:
;__Lib_UART_c67.c,29 :: 		
0x00B3	0x0871      	MOVF       R1, 0
0x00B4	0x00F0      	MOVWF      R0
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Read:
0x00B5	0x0008      	RETURN
; end of _UART1_Read
_UART1_Write:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,40 :: 		
L_UART1_Write3:
0x00B6	0x1683      	BSF        STATUS, 5
0x00B7	0x1303      	BCF        STATUS, 6
0x00B8	0x1898      	BTFSC      TXSTA, 1
0x00B9	0x28BC      	GOTO       L_UART1_Write4
;__Lib_UART_c67.c,41 :: 		
0x00BA	0x0000      	NOP
0x00BB	0x28B6      	GOTO       L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,42 :: 		
0x00BC	0x1283      	BCF        STATUS, 5
0x00BD	0x0825      	MOVF       FARG_UART1_Write_data_, 0
0x00BE	0x0099      	MOVWF      TXREG
;__Lib_UART_c67.c,43 :: 		
L_end_UART1_Write:
0x00BF	0x0008      	RETURN
; end of _UART1_Write
_SpiWrite:
;RFID.c,34 :: 		void SpiWrite(unsigned char SPIData){
;RFID.c,35 :: 		while(!SS);                                                                 // Aguarda enquanto a transmissão/recepção anterior não tiver terminado
L_SpiWrite0:
0x00C0	0x1283      	BCF        STATUS, 5
0x00C1	0x1303      	BCF        STATUS, 6
0x00C2	0x1808      	BTFSC      PORTD, 0
0x00C3	0x28C5      	GOTO       L_SpiWrite1
0x00C4	0x28C0      	GOTO       L_SpiWrite0
L_SpiWrite1:
;RFID.c,36 :: 		SS=0;                                                                       // Slave selecionado
0x00C5	0x1008      	BCF        PORTD, 0
;RFID.c,37 :: 		SSPBUF=SPIData;                                                             // Inicia nova transmissão/Recepção
0x00C6	0x0825      	MOVF       FARG_SpiWrite_SPIData, 0
0x00C7	0x0093      	MOVWF      SSPBUF
;RFID.c,38 :: 		}
L_end_SpiWrite:
0x00C8	0x0008      	RETURN
; end of _SpiWrite
_main:
;RFID.c,48 :: 		void main() {
;RFID.c,50 :: 		Lcd_Init();                                                                // Inicializa o LCD
0x00C9	0x2040      	CALL       _Lcd_Init
;RFID.c,51 :: 		TRISD.RD0  = 0;                                                            // SS é OUTPUT
0x00CA	0x1683      	BSF        STATUS, 5
0x00CB	0x1008      	BCF        TRISD, 0
;RFID.c,52 :: 		SS         = 1;                                                            // Slave não selecionado
0x00CC	0x1283      	BCF        STATUS, 5
0x00CD	0x1408      	BSF        PORTD, 0
;RFID.c,53 :: 		ADCON1     = 0x07;                                                         // Todas as portas são digitais
0x00CE	0x3007      	MOVLW      7
0x00CF	0x1683      	BSF        STATUS, 5
0x00D0	0x009F      	MOVWF      ADCON1
;RFID.c,54 :: 		mssp_SPI_init();                                                           // Inicializa a mssp para comunicação SPI
0x00D1	0x208E      	CALL       _mssp_SPI_init
;RFID.c,55 :: 		Uart1_init(9600);                                                          // Inicializa o módulo UART com 9600 de baud rate
0x00D2	0x3081      	MOVLW      129
0x00D3	0x1683      	BSF        STATUS, 5
0x00D4	0x0099      	MOVWF      SPBRG
0x00D5	0x1518      	BSF        TXSTA, 2
0x00D6	0x2030      	CALL       _UART1_Init
;RFID.c,57 :: 		INTCON     = 0xC0;                                                         // Interrupções globais habilitadas, Interrupções dos periféricos habilitadas
0x00D7	0x30C0      	MOVLW      192
0x00D8	0x008B      	MOVWF      INTCON
;RFID.c,58 :: 		PIE1.SSPIE = 1;                                                            // Habilita interrução do módulo MSSP
0x00D9	0x1683      	BSF        STATUS, 5
0x00DA	0x158C      	BSF        PIE1, 3
;RFID.c,60 :: 		delay_ms(2000);
0x00DB	0x3033      	MOVLW      51
0x00DC	0x00FB      	MOVWF      R11
0x00DD	0x30BB      	MOVLW      187
0x00DE	0x00FC      	MOVWF      R12
0x00DF	0x30DF      	MOVLW      223
0x00E0	0x00FD      	MOVWF      R13
L_main3:
0x00E1	0x0BFD      	DECFSZ     R13, 1
0x00E2	0x28E1      	GOTO       L_main3
0x00E3	0x0BFC      	DECFSZ     R12, 1
0x00E4	0x28E1      	GOTO       L_main3
0x00E5	0x0BFB      	DECFSZ     R11, 1
0x00E6	0x28E1      	GOTO       L_main3
0x00E7	0x0000      	NOP
0x00E8	0x0000      	NOP
;RFID.c,62 :: 		for(;;){                                                                   // Loop infinito
L_main4:
;RFID.c,63 :: 		while(!UART1_Data_Ready());                                            // Espera um byte chegar na UART
L_main7:
0x00E9	0x2098      	CALL       _UART1_Data_Ready
0x00EA	0x0870      	MOVF       R0, 0
0x00EB	0x1D03      	BTFSS      STATUS, 2
0x00EC	0x28EE      	GOTO       L_main8
0x00ED	0x28E9      	GOTO       L_main7
L_main8:
;RFID.c,64 :: 		SpiWrite(UART1_Read());
0x00EE	0x20AB      	CALL       _UART1_Read
0x00EF	0x0870      	MOVF       R0, 0
0x00F0	0x00A5      	MOVWF      FARG_SpiWrite_SPIData
0x00F1	0x20C0      	CALL       _SpiWrite
;RFID.c,65 :: 		while(!SS);
L_main9:
0x00F2	0x1808      	BTFSC      PORTD, 0
0x00F3	0x28F5      	GOTO       L_main10
0x00F4	0x28F2      	GOTO       L_main9
L_main10:
;RFID.c,66 :: 		UART1_Write(SSPBUF);
0x00F5	0x0813      	MOVF       SSPBUF, 0
0x00F6	0x00A5      	MOVWF      FARG_UART1_Write_data_
0x00F7	0x20B6      	CALL       _UART1_Write
;RFID.c,67 :: 		}
0x00F8	0x28E9      	GOTO       L_main4
;RFID.c,69 :: 		}
L_end_main:
0x00F9	0x28F9      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [18]    _interrupt
0x0016       [7]    _____DoICP
0x001D       [6]    _Delay_1us
0x0023      [13]    _Delay_5500us
0x0030      [16]    _UART1_Init
0x0040      [78]    _Lcd_Init
0x008E      [10]    _mssp_SPI_init
0x0098       [7]    _UART1_Data_Ready
0x009F      [12]    ___CC2DW
0x00AB      [11]    _UART1_Read
0x00B6      [10]    _UART1_Write
0x00C0       [9]    _SpiWrite
0x00C9      [49]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [0]    LCD_D4
0x0006       [0]    RB0_bit
0x0006       [0]    LCD_RS
0x0006       [0]    LCD_EN
0x0006       [0]    LCD_D7
0x0006       [0]    LCD_D6
0x0006       [0]    LCD_D5
0x0006       [0]    RB1_bit
0x0006       [0]    RB3_bit
0x0006       [0]    RB4_bit
0x0006       [0]    RB5_bit
0x0006       [0]    RB2_bit
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PIR1
0x0013       [1]    SSPBUF
0x0014       [1]    SSPCON
0x0018       [1]    RCSTA
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x0020       [0]    __Lib_Lcd_cmd_status
0x0021       [2]    ___DoICPAddr
0x0023       [1]    ___savePCLATH
0x0024       [1]    ___saveSTATUS
0x0025       [1]    FARG_UART1_Write_data_
0x0025       [1]    FARG_SpiWrite_SPIData
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0086       [0]    TRISB2_bit
0x0086       [0]    LCD_D6_Direction
0x0086       [0]    TRISB1_bit
0x0086       [0]    TRISB5_bit
0x0086       [0]    TRISB4_bit
0x0086       [0]    TRISB3_bit
0x0086       [0]    LCD_EN_Direction
0x0086       [0]    LCD_D4_Direction
0x0086       [0]    LCD_D5_Direction
0x0086       [0]    TRISB0_bit
0x0086       [0]    LCD_RS_Direction
0x0086       [0]    LCD_D7_Direction
0x0087       [0]    TRISC7_bit
0x0087       [1]    TRISC
0x0087       [0]    TRISC6_bit
0x0088       [1]    TRISD
0x008C       [1]    PIE1
0x0094       [1]    SSPSTAT
0x0098       [1]    TXSTA
0x0099       [1]    SPBRG
0x009F       [1]    ADCON1
