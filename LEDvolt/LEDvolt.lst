;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 11/06/2019 11:59:26
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF8F  	GOTO        286
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x001C	0x0E0E      	MOVLW       14
0x001E	0x6E0D      	MOVWF       R13, 0
L_Delay_22us1:
0x0020	0x2E0D      	DECFSZ      R13, 1, 0
0x0022	0xD7FE      	BRA         L_Delay_22us1
0x0024	0x0000      	NOP
;__Lib_Delays.c,17 :: 		}
L_end_Delay_22us:
0x0026	0x0012      	RETURN      0
; end of _Delay_22us
_Mul_32x32_U:
;__Lib_Math.c,1616 :: 		
;__Lib_Math.c,1631 :: 		
0x0028	0x0E22      	MOVLW       34
;__Lib_Math.c,1632 :: 		
0x002A	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1633 :: 		
0x002C	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,1634 :: 		
0x002E	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,1635 :: 		
0x0030	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,1636 :: 		
0x0032	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,1638 :: 		
_NEXT:
;__Lib_Math.c,1642 :: 		
0x0034	0x060C      	DECF        R12, 1, 0
;__Lib_Math.c,1643 :: 		
0x0036	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1644 :: 		
0x0038	0xD01F      	BRA         _EXIT2
;__Lib_Math.c,1645 :: 		
0x003A	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,1647 :: 		
_LOOP:
;__Lib_Math.c,1656 :: 		
0x003C	0x320B      	RRCF        R11, 1, 0
;__Lib_Math.c,1657 :: 		
0x003E	0x320A      	RRCF        R10, 1, 0
;__Lib_Math.c,1658 :: 		
0x0040	0x3209      	RRCF        R9, 1, 0
;__Lib_Math.c,1659 :: 		
0x0042	0x3208      	RRCF        R8, 1, 0
;__Lib_Math.c,1660 :: 		
0x0044	0x3203      	RRCF        R3, 1, 0
;__Lib_Math.c,1661 :: 		
0x0046	0x3202      	RRCF        R2, 1, 0
;__Lib_Math.c,1662 :: 		
0x0048	0x3201      	RRCF        R1, 1, 0
;__Lib_Math.c,1663 :: 		
0x004A	0x3200      	RRCF        R0, 1, 0
;__Lib_Math.c,1668 :: 		
0x004C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1669 :: 		
0x004E	0xD7F2      	BRA         _NEXT
;__Lib_Math.c,1670 :: 		
0x0050	0x060C      	DECF        R12, 1, 0
;__Lib_Math.c,1671 :: 		
0x0052	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1672 :: 		
0x0054	0xD009      	BRA         _EXIT1
;__Lib_Math.c,1679 :: 		
0x0056	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1680 :: 		
0x0058	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1681 :: 		
0x005A	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1684 :: 		
0x005C	0x2209      	ADDWFC      R9, 1, 0
;__Lib_Math.c,1685 :: 		
0x005E	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1688 :: 		
0x0060	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,1689 :: 		
0x0062	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1692 :: 		
0x0064	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,1694 :: 		
0x0066	0xD7EA      	BRA         _LOOP
;__Lib_Math.c,1696 :: 		
_EXIT1:
;__Lib_Math.c,1701 :: 		
0x0068	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1702 :: 		
0x006A	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1703 :: 		
0x006C	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1706 :: 		
0x006E	0x2209      	ADDWFC      R9, 1, 0
;__Lib_Math.c,1707 :: 		
0x0070	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1710 :: 		
0x0072	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,1711 :: 		
0x0074	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1714 :: 		
0x0076	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,1717 :: 		
_EXIT2:
;__Lib_Math.c,1719 :: 		
L_end_Mul_32x32_U:
0x0078	0x0012      	RETURN      0
; end of _Mul_32x32_U
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x007A	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x007C	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0080	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0082	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0084	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0086	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0088	0x0012      	RETURN      0
; end of ___CC2DW
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0x008A	0x0EFF      	MOVLW       _UART1_Write
0x008C	0x6E1E      	MOVWF       _UART_Wr_Ptr 
0x008E	0x0EFF      	MOVLW       hi_addr(_UART1_Write)
0x0090	0x6E1F      	MOVWF       _UART_Wr_Ptr+1 
0x0092	0x0EFF      	MOVLW       FARG_UART1_Write_data_
0x0094	0x6E20      	MOVWF       _UART_Wr_Ptr+2 
0x0096	0x0EFF      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x0098	0x6E21      	MOVWF       _UART_Wr_Ptr+3 
;__Lib_UART_c67.c,19 :: 		
0x009A	0x0EFF      	MOVLW       _UART1_Read
0x009C	0x6E22      	MOVWF       _UART_Rd_Ptr 
0x009E	0x0EFF      	MOVLW       hi_addr(_UART1_Read)
0x00A0	0x6E23      	MOVWF       _UART_Rd_Ptr+1 
0x00A2	0x0E00      	MOVLW       0
0x00A4	0x6E24      	MOVWF       _UART_Rd_Ptr+2 
0x00A6	0x0E00      	MOVLW       0
0x00A8	0x6E25      	MOVWF       _UART_Rd_Ptr+3 
;__Lib_UART_c67.c,20 :: 		
0x00AA	0x0EFF      	MOVLW       _UART1_Data_Ready
0x00AC	0x6E16      	MOVWF       _UART_Rdy_Ptr 
0x00AE	0x0EFF      	MOVLW       hi_addr(_UART1_Data_Ready)
0x00B0	0x6E17      	MOVWF       _UART_Rdy_Ptr+1 
0x00B2	0x0E00      	MOVLW       0
0x00B4	0x6E18      	MOVWF       _UART_Rdy_Ptr+2 
0x00B6	0x0E00      	MOVLW       0
0x00B8	0x6E19      	MOVWF       _UART_Rdy_Ptr+3 
;__Lib_UART_c67.c,21 :: 		
0x00BA	0x0EFF      	MOVLW       _UART1_Tx_Idle
0x00BC	0x6E1A      	MOVWF       _UART_Tx_Idle_Ptr 
0x00BE	0x0EFF      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x00C0	0x6E1B      	MOVWF       _UART_Tx_Idle_Ptr+1 
0x00C2	0x0E00      	MOVLW       0
0x00C4	0x6E1C      	MOVWF       _UART_Tx_Idle_Ptr+2 
0x00C6	0x0E00      	MOVLW       0
0x00C8	0x6E1D      	MOVWF       _UART_Tx_Idle_Ptr+3 
;__Lib_UART_c67.c,23 :: 		
0x00CA	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0x00CC	0x0E90      	MOVLW       144
0x00CE	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0x00D0	0x8E94      	BSF         TRISC7_bit, BitPos(TRISC7_bit+0) 
;__Lib_UART_c67.c,26 :: 		
0x00D2	0x9C94      	BCF         TRISC6_bit, BitPos(TRISC6_bit+0) 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0x00D4	0xAA9E      	BTFSS       PIR1, 5 
0x00D6	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0x00D8	0xF000CFAE  	MOVFF       RCREG, R0
0x00DC	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Init:
0x00DE	0x0012      	RETURN      0
; end of _UART1_Init
_ADC_Read:
;__Lib_ADC_A_D.c,51 :: 		
;__Lib_ADC_A_D.c,54 :: 		
0x00E0	0x6AC2      	CLRF        ADCON0 
;__Lib_ADC_A_D.c,55 :: 		
0x00E2	0x1C15      	COMF        _vref_mask, 0 
0x00E4	0x6E00      	MOVWF       R0 
0x00E6	0x5000      	MOVF        R0, 0 
0x00E8	0x16C1      	ANDWF       ADCON1, 1 
;__Lib_ADC_A_D.c,56 :: 		
0x00EA	0x0E07      	MOVLW       7
0x00EC	0x12C0      	IORWF       ADCON2, 1 
;__Lib_ADC_A_D.c,57 :: 		
0x00EE	0x8EC0      	BSF         ADCON2, 7 
;__Lib_ADC_A_D.c,58 :: 		
0x00F0	0xF000C02A  	MOVFF       FARG_ADC_Read_channel, R0
0x00F4	0x3600      	RLCF        R0, 1 
0x00F6	0x9000      	BCF         R0, 0 
0x00F8	0x3600      	RLCF        R0, 1 
0x00FA	0x9000      	BCF         R0, 0 
0x00FC	0x5000      	MOVF        R0, 0 
0x00FE	0x12C2      	IORWF       ADCON0, 1 
;__Lib_ADC_A_D.c,59 :: 		
0x0100	0x80C2      	BSF         ADCON0, 0 
;__Lib_ADC_A_D.c,60 :: 		
0x0102	0xDF8C      	RCALL       _Delay_22us
;__Lib_ADC_A_D.c,61 :: 		
0x0104	0x82C2      	BSF         ADCON0, 1 
;__Lib_ADC_A_D.c,62 :: 		
L_ADC_Read2:
0x0106	0xA2C2      	BTFSS       ADCON0, 1 
0x0108	0xD001      	BRA         L_ADC_Read3
;__Lib_ADC_A_D.c,63 :: 		
0x010A	0xD7FD      	BRA         L_ADC_Read2
L_ADC_Read3:
;__Lib_ADC_A_D.c,64 :: 		
0x010C	0xF001CFC4  	MOVFF       ADRESH, R1
0x0110	0x6A00      	CLRF        R0 
;__Lib_ADC_A_D.c,65 :: 		
0x0112	0x50C3      	MOVF        ADRESL, 0 
0x0114	0x1200      	IORWF       R0, 1 
0x0116	0x0E00      	MOVLW       0
0x0118	0x1201      	IORWF       R1, 1 
;__Lib_ADC_A_D.c,66 :: 		
0x011A	0x90C2      	BCF         ADCON0, 0 
;__Lib_ADC_A_D.c,68 :: 		
;__Lib_ADC_A_D.c,69 :: 		
L_end_ADC_Read:
0x011C	0x0012      	RETURN      0
; end of _ADC_Read
_main:
0x011E	0xF001EC37  	CALL        622, 0
;LEDvolt.c,11 :: 		void main() {
;LEDvolt.c,14 :: 		TRISB=0xE0;        // Os 5 primeiros bits do PORTB são OUTPUT, os demais são input
0x0122	0x0EE0      	MOVLW       224
0x0124	0x6E93      	MOVWF       TRISB 
;LEDvolt.c,15 :: 		ADCON1=0x0E;       // Todas as portas são dgitais exceto AN0(RA0)
0x0126	0x0E0E      	MOVLW       14
0x0128	0x6EC1      	MOVWF       ADCON1 
;LEDvolt.c,16 :: 		TRISA.RA0=1;       // A porta do AN0 é input
0x012A	0x8092      	BSF         TRISA, 0 
;LEDvolt.c,17 :: 		ADCON2=0x80;     // Resultado justificado a direita
0x012C	0x0E80      	MOVLW       128
0x012E	0x6EC0      	MOVWF       ADCON2 
;LEDvolt.c,22 :: 		UART1_Init(4800);//**************************
0x0130	0x86B8      	BSF         BAUDCON, 3, 0
0x0132	0x0E01      	MOVLW       1
0x0134	0x6EB0      	MOVWF       SPBRGH 
0x0136	0x0EA0      	MOVLW       160
0x0138	0x6EAF      	MOVWF       SPBRG 
0x013A	0x84AC      	BSF         TXSTA, 2, 0
0x013C	0xDFA6      	RCALL       _UART1_Init
;LEDvolt.c,23 :: 		Delay_ms(100); //**************************
0x013E	0x0E02      	MOVLW       2
0x0140	0x6E0B      	MOVWF       R11, 0
0x0142	0x0E04      	MOVLW       4
0x0144	0x6E0C      	MOVWF       R12, 0
0x0146	0x0EBA      	MOVLW       186
0x0148	0x6E0D      	MOVWF       R13, 0
L_main0:
0x014A	0x2E0D      	DECFSZ      R13, 1, 0
0x014C	0xD7FE      	BRA         L_main0
0x014E	0x2E0C      	DECFSZ      R12, 1, 0
0x0150	0xD7FC      	BRA         L_main0
0x0152	0x2E0B      	DECFSZ      R11, 1, 0
0x0154	0xD7FA      	BRA         L_main0
0x0156	0x0000      	NOP
;LEDvolt.c,24 :: 		for (;;){
L_main1:
;LEDvolt.c,26 :: 		mV= Adc_Read(0); // multiplicado por 5000mv e dividido por 1024: deslocado 10 bits para a direita, o que é o mesmo que dividir por 1024
0x0158	0x6A2A      	CLRF        FARG_ADC_Read_channel 
0x015A	0xDFC2      	RCALL       _ADC_Read
0x015C	0xF026C000  	MOVFF       R0, main_mV_L0
0x0160	0xF027C001  	MOVFF       R1, main_mV_L0+1
0x0164	0x0E00      	MOVLW       0
0x0166	0x6E28      	MOVWF       main_mV_L0+2 
0x0168	0x6E29      	MOVWF       main_mV_L0+3 
;LEDvolt.c,27 :: 		mV=(mV*4760)>>10; // CUIDADO, SE MULTIPLICAR DUAS VARIAVEIS INTEIRAS O RESULTADO É SEMPRE UM INTEIRO DE 16 BITS, PORTANTO DEPENDENDO DO VALOR PODE DAR OVERFLOW
0x016A	0xF000C026  	MOVFF       main_mV_L0, R0
0x016E	0xF001C027  	MOVFF       main_mV_L0+1, R1
0x0172	0xF002C028  	MOVFF       main_mV_L0+2, R2
0x0176	0xF003C029  	MOVFF       main_mV_L0+3, R3
0x017A	0x0E98      	MOVLW       152
0x017C	0x6E04      	MOVWF       R4 
0x017E	0x0E12      	MOVLW       18
0x0180	0x6E05      	MOVWF       R5 
0x0182	0x0E00      	MOVLW       0
0x0184	0x6E06      	MOVWF       R6 
0x0186	0x6E07      	MOVWF       R7 
0x0188	0xDF4F      	RCALL       _Mul_32x32_U
0x018A	0x0E0A      	MOVLW       10
0x018C	0x6E08      	MOVWF       R8 
0x018E	0xF004C000  	MOVFF       R0, R4
0x0192	0xF005C001  	MOVFF       R1, R5
0x0196	0xF006C002  	MOVFF       R2, R6
0x019A	0xF007C003  	MOVFF       R3, R7
0x019E	0x5008      	MOVF        R8, 0 
L__main16:
0x01A0	0xE007      	BZ          L__main17
0x01A2	0x3207      	RRCF        R7, 1 
0x01A4	0x3206      	RRCF        R6, 1 
0x01A6	0x3205      	RRCF        R5, 1 
0x01A8	0x3204      	RRCF        R4, 1 
0x01AA	0x9E07      	BCF         R7, 7 
0x01AC	0x0FFF      	ADDLW       255
0x01AE	0xD7F8      	BRA         L__main16
L__main17:
0x01B0	0xF026C004  	MOVFF       R4, main_mV_L0
0x01B4	0xF027C005  	MOVFF       R5, main_mV_L0+1
0x01B8	0xF028C006  	MOVFF       R6, main_mV_L0+2
0x01BC	0xF029C007  	MOVFF       R7, main_mV_L0+3
;LEDvolt.c,30 :: 		if (mV>0) LED01V=1; else LED01V=0;
0x01C0	0x5007      	MOVF        R7, 0 
0x01C2	0x0800      	SUBLW       0
0x01C4	0xE108      	BNZ         L__main18
0x01C6	0x5006      	MOVF        R6, 0 
0x01C8	0x0800      	SUBLW       0
0x01CA	0xE105      	BNZ         L__main18
0x01CC	0x5005      	MOVF        R5, 0 
0x01CE	0x0800      	SUBLW       0
0x01D0	0xE102      	BNZ         L__main18
0x01D2	0x5004      	MOVF        R4, 0 
0x01D4	0x0800      	SUBLW       0
L__main18:
0x01D6	0xE202      	BC          L_main4
0x01D8	0x8081      	BSF         PORTB, 0 
0x01DA	0xD001      	BRA         L_main5
L_main4:
0x01DC	0x9081      	BCF         PORTB, 0 
L_main5:
;LEDvolt.c,31 :: 		if (mV>=1000) LED12V=1 ; else LED12V=0;
0x01DE	0x0E00      	MOVLW       0
0x01E0	0x5C29      	SUBWF       main_mV_L0+3, 0 
0x01E2	0xE108      	BNZ         L__main19
0x01E4	0x0E00      	MOVLW       0
0x01E6	0x5C28      	SUBWF       main_mV_L0+2, 0 
0x01E8	0xE105      	BNZ         L__main19
0x01EA	0x0E03      	MOVLW       3
0x01EC	0x5C27      	SUBWF       main_mV_L0+1, 0 
0x01EE	0xE102      	BNZ         L__main19
0x01F0	0x0EE8      	MOVLW       232
0x01F2	0x5C26      	SUBWF       main_mV_L0, 0 
L__main19:
0x01F4	0xE302      	BNC         L_main6
0x01F6	0x8281      	BSF         PORTB, 1 
0x01F8	0xD001      	BRA         L_main7
L_main6:
0x01FA	0x9281      	BCF         PORTB, 1 
L_main7:
;LEDvolt.c,32 :: 		if (mV>=2000) LED23V=1;  else LED23V=0;
0x01FC	0x0E00      	MOVLW       0
0x01FE	0x5C29      	SUBWF       main_mV_L0+3, 0 
0x0200	0xE108      	BNZ         L__main20
0x0202	0x0E00      	MOVLW       0
0x0204	0x5C28      	SUBWF       main_mV_L0+2, 0 
0x0206	0xE105      	BNZ         L__main20
0x0208	0x0E07      	MOVLW       7
0x020A	0x5C27      	SUBWF       main_mV_L0+1, 0 
0x020C	0xE102      	BNZ         L__main20
0x020E	0x0ED0      	MOVLW       208
0x0210	0x5C26      	SUBWF       main_mV_L0, 0 
L__main20:
0x0212	0xE302      	BNC         L_main8
0x0214	0x8481      	BSF         PORTB, 2 
0x0216	0xD001      	BRA         L_main9
L_main8:
0x0218	0x9481      	BCF         PORTB, 2 
L_main9:
;LEDvolt.c,33 :: 		if (mV>=3000) LED34V=1;  else LED34V=0;
0x021A	0x0E00      	MOVLW       0
0x021C	0x5C29      	SUBWF       main_mV_L0+3, 0 
0x021E	0xE108      	BNZ         L__main21
0x0220	0x0E00      	MOVLW       0
0x0222	0x5C28      	SUBWF       main_mV_L0+2, 0 
0x0224	0xE105      	BNZ         L__main21
0x0226	0x0E0B      	MOVLW       11
0x0228	0x5C27      	SUBWF       main_mV_L0+1, 0 
0x022A	0xE102      	BNZ         L__main21
0x022C	0x0EB8      	MOVLW       184
0x022E	0x5C26      	SUBWF       main_mV_L0, 0 
L__main21:
0x0230	0xE302      	BNC         L_main10
0x0232	0x8681      	BSF         PORTB, 3 
0x0234	0xD001      	BRA         L_main11
L_main10:
0x0236	0x9681      	BCF         PORTB, 3 
L_main11:
;LEDvolt.c,34 :: 		if (mV>=4000) LED45V=1; else LED45V=0;
0x0238	0x0E00      	MOVLW       0
0x023A	0x5C29      	SUBWF       main_mV_L0+3, 0 
0x023C	0xE108      	BNZ         L__main22
0x023E	0x0E00      	MOVLW       0
0x0240	0x5C28      	SUBWF       main_mV_L0+2, 0 
0x0242	0xE105      	BNZ         L__main22
0x0244	0x0E0F      	MOVLW       15
0x0246	0x5C27      	SUBWF       main_mV_L0+1, 0 
0x0248	0xE102      	BNZ         L__main22
0x024A	0x0EA0      	MOVLW       160
0x024C	0x5C26      	SUBWF       main_mV_L0, 0 
L__main22:
0x024E	0xE302      	BNC         L_main12
0x0250	0x8881      	BSF         PORTB, 4 
0x0252	0xD001      	BRA         L_main13
L_main12:
0x0254	0x9881      	BCF         PORTB, 4 
L_main13:
;LEDvolt.c,35 :: 		Delay_ms(10);
0x0256	0x0E1A      	MOVLW       26
0x0258	0x6E0C      	MOVWF       R12, 0
0x025A	0x0EF8      	MOVLW       248
0x025C	0x6E0D      	MOVWF       R13, 0
L_main14:
0x025E	0x2E0D      	DECFSZ      R13, 1, 0
0x0260	0xD7FE      	BRA         L_main14
0x0262	0x2E0C      	DECFSZ      R12, 1, 0
0x0264	0xD7FC      	BRA         L_main14
0x0266	0x0000      	NOP
;LEDvolt.c,37 :: 		}
0x0268	0xD777      	BRA         L_main1
;LEDvolt.c,38 :: 		}
L_end_main:
0x026A	0xD7FF      	BRA         $+0
; end of _main
0x026E	0xF015EE10  	LFSR        1, 21
0x0272	0x0E01      	MOVLW       1
0x0274	0x6E00      	MOVWF       R0 
0x0276	0x0E01      	MOVLW       1
0x0278	0x6E01      	MOVWF       R1 
0x027A	0x0E6C      	MOVLW       108
0x027C	0x6EF6      	MOVWF       4086 
0x027E	0x0E02      	MOVLW       2
0x0280	0x6EF7      	MOVWF       TBLPTRH 
0x0282	0x0E00      	MOVLW       0
0x0284	0x6EF8      	MOVWF       TBLPTRU 
0x0286	0xF000EC3D  	CALL        122, 0
0x028A	0x0012      	RETURN      0
;__Lib_ADC_A_D.c,0 :: ?ICS_vref_mask
0x026C	0x30 ;?ICS_vref_mask+0
; end of ?ICS_vref_mask
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [12]    _Delay_22us
0x0028      [82]    _Mul_32x32_U
0x007A      [16]    ___CC2DW
0x008A      [86]    _UART1_Init
0x00E0      [62]    _ADC_Read
0x011E     [334]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    R0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    R1
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    __Lib_TFT_JPEG_FileRead_i_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    __Lib_TFT_JPEG_FileReadBytes_Result_L0
0x0001       [1]    FLASH_Write_64_i_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileReadBytes_Result_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileRead_i_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memchr_s_L0
0x0002       [1]    FLASH_Write_64_SaveINTCON_L0
0x0002       [2]    memset_pp_L0
0x0002       [1]    R2
0x0003       [1]    MM_Init_i_L0
0x0003       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT29
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [2]    __Lib_MmcFat16_f16_toInt_l_L0
0x0003       [1]    R3
0x0003       [2]    memmove_tt_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0004       [2]    frexp_pom_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strncat_cp_L0
0x0004       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT40
0x0004       [1]    R4
0x0005       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT54
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    memmove_ff_L0
0x0005       [1]    R5
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0006       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT69
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0006       [1]    R6
0x0007       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    R7
0x0008       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [1]    R8
0x0009       [4]    __Lib_MmcFat16_f16_toLong_l_L0
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    _vref_mask
0x0016       [4]    _UART_Rdy_Ptr
0x001A       [4]    _UART_Tx_Idle_Ptr
0x001E       [4]    _UART_Wr_Ptr
0x0022       [4]    _UART_Rd_Ptr
0x0026       [4]    main_mV_L0
0x002A       [1]    FARG_ADC_Read_channel
0x0F81       [1]    PORTB
0x0F92       [1]    TRISA
0x0F93       [1]    TRISB
0x0F94       [0]    TRISC7_bit
0x0F94       [0]    TRISC6_bit
0x0F9E       [1]    PIR1
0x0FAB       [1]    RCSTA
0x0FAC       [1]    TXSTA
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB8       [1]    BAUDCON
0x0FC0       [1]    ADCON2
0x0FC1       [1]    ADCON1
0x0FC2       [1]    ADCON0
0x0FC3       [1]    ADRESL
0x0FC4       [1]    ADRESH
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x026C       [1]    ?ICS_vref_mask
