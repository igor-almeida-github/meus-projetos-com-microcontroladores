;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 29/04/2019 20:11:48
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF0E  	GOTO        28
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_main:
;advancedlogicprobe.c,8 :: 		void main() {
;advancedlogicprobe.c,10 :: 		ADCON1=0x0F;      //para fazer que todas as portas sejam digitais
0x001C	0x0E0F      	MOVLW       15
0x001E	0x6EC1      	MOVWF       ADCON1 
;advancedlogicprobe.c,11 :: 		TRISA.RA0 = 0;    //RED_LED é output
0x0020	0x9092      	BCF         TRISA, 0 
;advancedlogicprobe.c,12 :: 		TRISA.RA1 = 0;    //GREEN_LED é OUTPUT
0x0022	0x9292      	BCF         TRISA, 1 
;advancedlogicprobe.c,13 :: 		TRISB.RB4 = 0;    //PROBEOUT é OUTPUT
0x0024	0x9893      	BCF         TRISB, 4 
;advancedlogicprobe.c,14 :: 		TRISB.RB2 = 1;    //PROBEIN é INPUT
0x0026	0x8493      	BSF         TRISB, 2 
;advancedlogicprobe.c,16 :: 		for (;;){
L_main0:
;advancedlogicprobe.c,17 :: 		PROBEOUT=1;
0x0028	0x8881      	BSF         PORTB, 4 
;advancedlogicprobe.c,18 :: 		Delay_ms(1); // Para esperar o transistor chavear
0x002A	0x0E06      	MOVLW       6
0x002C	0x6E0C      	MOVWF       R12, 0
0x002E	0x0E30      	MOVLW       48
0x0030	0x6E0D      	MOVWF       R13, 0
L_main3:
0x0032	0x2E0D      	DECFSZ      R13, 1, 0
0x0034	0xD7FE      	BRA         L_main3
0x0036	0x2E0C      	DECFSZ      R12, 1, 0
0x0038	0xD7FC      	BRA         L_main3
0x003A	0x0000      	NOP
;advancedlogicprobe.c,19 :: 		leitura1=PROBEIN;
0x003C	0xB481      	BTFSC       PORTB, 2 
0x003E	0xD002      	BRA         L__main16
0x0040	0x9015      	BCF         _leitura1, BitPos(_leitura1+0) 
0x0042	0xD001      	BRA         L__main17
L__main16:
0x0044	0x8015      	BSF         _leitura1, BitPos(_leitura1+0) 
L__main17:
;advancedlogicprobe.c,20 :: 		PROBEOUT=0;
0x0046	0x9881      	BCF         PORTB, 4 
;advancedlogicprobe.c,21 :: 		Delay_ms(1); // Para esperar o transistor chavear
0x0048	0x0E06      	MOVLW       6
0x004A	0x6E0C      	MOVWF       R12, 0
0x004C	0x0E30      	MOVLW       48
0x004E	0x6E0D      	MOVWF       R13, 0
L_main4:
0x0050	0x2E0D      	DECFSZ      R13, 1, 0
0x0052	0xD7FE      	BRA         L_main4
0x0054	0x2E0C      	DECFSZ      R12, 1, 0
0x0056	0xD7FC      	BRA         L_main4
0x0058	0x0000      	NOP
;advancedlogicprobe.c,22 :: 		leitura0=PROBEIN;
0x005A	0xB481      	BTFSC       PORTB, 2 
0x005C	0xD002      	BRA         L__main18
0x005E	0x9215      	BCF         _leitura0, BitPos(_leitura0+0) 
0x0060	0xD001      	BRA         L__main19
L__main18:
0x0062	0x8215      	BSF         _leitura0, BitPos(_leitura0+0) 
L__main19:
;advancedlogicprobe.c,23 :: 		if  (leitura1==0 && leitura0==0){ // ponta de prova em nivel baixo
0x0064	0xB015      	BTFSC       _leitura1, BitPos(_leitura1+0) 
0x0066	0xD005      	BRA         L_main7
0x0068	0xB215      	BTFSC       _leitura0, BitPos(_leitura0+0) 
0x006A	0xD003      	BRA         L_main7
L__main14:
;advancedlogicprobe.c,24 :: 		RED_LED=1;
0x006C	0x8080      	BSF         PORTA, 0 
;advancedlogicprobe.c,25 :: 		GREEN_LED=0;
0x006E	0x9280      	BCF         PORTA, 1 
;advancedlogicprobe.c,26 :: 		}
0x0070	0xD009      	BRA         L_main8
L_main7:
;advancedlogicprobe.c,27 :: 		else if  (leitura1==1 && leitura0==1){ // ponta de prova em nivel alto
0x0072	0xA015      	BTFSS       _leitura1, BitPos(_leitura1+0) 
0x0074	0xD005      	BRA         L_main11
0x0076	0xA215      	BTFSS       _leitura0, BitPos(_leitura0+0) 
0x0078	0xD003      	BRA         L_main11
L__main13:
;advancedlogicprobe.c,28 :: 		RED_LED=0;
0x007A	0x9080      	BCF         PORTA, 0 
;advancedlogicprobe.c,29 :: 		GREEN_LED=1;
0x007C	0x8280      	BSF         PORTA, 1 
;advancedlogicprobe.c,30 :: 		}
0x007E	0xD002      	BRA         L_main12
L_main11:
;advancedlogicprobe.c,32 :: 		RED_LED=0;
0x0080	0x9080      	BCF         PORTA, 0 
;advancedlogicprobe.c,33 :: 		GREEN_LED=0;
0x0082	0x9280      	BCF         PORTA, 1 
;advancedlogicprobe.c,34 :: 		}
L_main12:
L_main8:
;advancedlogicprobe.c,36 :: 		}
0x0084	0xD7D1      	BRA         L_main0
;advancedlogicprobe.c,37 :: 		}
L_end_main:
0x0086	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C     [108]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [0]    _leitura1
0x0015       [0]    _leitura0
0x0F80       [1]    PORTA
0x0F81       [1]    PORTB
0x0F92       [1]    TRISA
0x0F93       [1]    TRISB
0x0FC1       [1]    ADCON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
